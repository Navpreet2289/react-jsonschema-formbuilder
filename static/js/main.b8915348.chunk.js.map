{"version":3,"sources":["default/menu.js","default/settings.js","core.js","reducers.js","store.js","InlineEditor.jsx","Tree/Menu.jsx","Tree/TreeNodeTitle.jsx","Tree/Tree.jsx","Tree/index.js","rjsf-patch/ArrayField.jsx","rjsf-patch/BooleanField.jsx","rjsf-patch/StringField.jsx","rjsf-patch/SchemaField.jsx","rjsf-patch/utils.js","rjsf-patch/Form.jsx","Template/Template.jsx","Template/connectors.jsx","Template/index.jsx","views/FormView.jsx","JsonEditor.jsx","views/SchemaView.jsx","views/UiSchemaView.jsx","views/FormDataView.jsx","Editor/JsonEditor.jsx","Editor/BasicEditor.jsx","Editor/index.jsx","Toolbar.jsx","Settings.jsx","App.jsx","serviceWorker.js","index.js"],"names":["basic","schema","type","title","properties","object","text","checkbox","checkboxes","items","enum","uniqueItems","dropdown","enumNames","number","textarea","datetime","uiSchema","module","exports","leftSiderWidth","rightSiderWidth","formWidth","isInlineMode","subViews","isEmptyObject","obj","i","undefined","isLeaf","node","schema2tree","name","schema2node","FORCE_CHANGE_KEY","forceChange","Date","now","process","e","path","key","join","length","children","child","push","Array","isArray","nextPath","map","a","toString","additionalItems","getNodeByPath","tree","find","getNode","split","updateParentKey","parentKey","Object","assign","getNodeParentKey","substring","updateNodeParentKeyAndName","newKey","updateNodeByNewChildren","oldNode","newChildren","newSchema","newProperties","newItemsNode","newAdditionalItemsNode","updateSchema","newUiSchema","startsWith","empty","updateUiSchema","newNode","updateArrayIndex","_removeNodeByPath","head","tail","arrayItemsFlag","removed","newTree","filter","required","newRequired","removeNodeByPath","removeNode","_addNodeByPath","position","node2Add","added","cn","newNodeChildren","addNodeByPath","addNode","targetKey","_moveNodeByPath","sh","st","th","tt","updated","node2move","tmpTree","moveNodeByPath","sourceNode","targetNode","moveNode","sourceKey","allowedUpdatedTypes","updateNodeByPath","nodeUpdate","_updateNodeByPath","includes","nu","typeUpdated","oldSchema","oldUiSchema","updateNode","getNodeByRjsfId","rjsfId","slice","indexOf","index","isNaN","rest","n","defaultMenu","defaultMenuSchema","emptyTree","reducer","combineReducers","state","action","newState","history","removeUnnecessaryHistory","undoable","payload","targetNodeKey","node2add","source","target","includeAction","activeNodeKey","settings","defaultSettings","menu","formData","menuOpenKeys","persistConfig","storage","stateReconciler","hardSet","throttle","initTree","require","description","firstName","lastName","age","bio","password","minLength","telephone","classNames","date","inputType","persistedReducer","persistReducer","present","store","createStore","past","future","persistor","persistStore","InlineEditor","props","onChange","setState","value","onCompleteEditing","editing","newValue","trim","onStartEditing","stopPropagation","preventDefault","input","focus","onCancelEditing","nextProps","this","ref","r","onBlur","onKeyUp","keyCode","EditOutlined","onClick","renderEditing","renderView","Component","SubMenu","Menu","Item","nameGen","occupied","newName","AddItemMenu","onAddNode","menuTree","menuOpenChange","mode","theme","openKeys","onOpenChange","b","React","connect","dispatch","keys","TreeNodeTitle","updateNodeName","searchValue","isRoot","indexBefore","toLowerCase","indexAfter","style","display","color","className","placement","trigger","overlay","PlusCircleOutlined","onConfirm","okText","cancelText","CloseCircleFilled","PureComponent","TreeNode","Tree","Search","Input","Demo","onDrop","info","dropKey","eventKey","dragKey","dragNode","dropPos","pos","dropPosition","Number","onExpand","expandedKeys","newSearchExpanded","loop","data","item","parents","searchExpanded","setActiveNode","placeholder","selectedKeys","draggable","onDragEnter","onSelect","selected","blockNode","selectedKey","updateNodeTitle","updateMode","ArrayFieldPatched","idSchema","disabled","readonly","autofocus","onFocus","registry","getDefaultRegistry","rawErrors","widgets","definitions","formContext","itemsSchema","retrieveSchema","enumOptions","optionsList","getUiOptions","widget","options","Widget","getWidget","id","$id","multiple","onSelectChange","ArrayField","BooleanField","fields","oneOf","option","const","label","DescriptionField","defaultProps","StringField","format","isSelect","defaultWidget","hasWidget","PatchedSchemaField","error","notification","message","duration","SchemaField","Error","msg","showIcon","_getWidget","TitleField","default","FormPatch","ArrayFieldTemplate","ObjectFieldTemplate","FieldTemplate","Form","Label","htmlFor","TextArea","ACTIVE_STYLE","backgroundColor","ExtendedInlineEditor","InlineTextAreaEditor","autoSize","ButtonGroup","select","remove","href","SelectOutlined","DeleteOutlined","errors","help","hidden","displayLabel","active","updateTitle","updateDescription","updateHelp","labelElement","descriptionElement","helpElement","_label","_description","_help","prop","content","titleElement","_title","FormView","setFormData","liveValidate","idPrefix","isLiveValidate","JsonEditor","JSON","parse","string","onClickPrettify","stringify","objA","objB","hasOwnProperty","shallowEqual","nextState","errorMessage","matched","exec","textAreaRef","selectionStart","selectionEnd","renderErrorMessage","setTree","json2schema","charAt","toUpperCase","name2title","isInteger","s","genForm","NodeJsonEditor","schemaJsonString","uiSchemaJsonString","rschema","Option","Select","FormItemTemplate","actions","size","shape","icon","CloseOutlined","Meta","TimeThrottle","timer","clearTimeout","setTimeout","onSubmitValue","onRemove","TimeThrottleInput","TimeThrottleTextArea","TimeThrottleRange","min","max","width","textAlign","borderLeft","pointerEvents","lodash","boolean","radio","uri","file","updown","range","integer","array","files","toPairs","flatMap","groupBy","t","types","update","availableTypes","ClassNamesEditor","colSizes","onSliderChange","col","found","newClassNames","perfix","v","Set","cols","extractCol","newOptions","align","xs","renderMenu","CaretDownOutlined","sliderValue","tokenSeparators","updateUiOptions","availableWidgets","f","showSearch","pattern","rangeMeta","match","minp","maxp","itemRange","defaultChecked","values","enumKey","enumName","formatOptions","BasicEditor","l","addable","editable","PlusOutlined","itemLayout","dataSource","renderItem","TabPane","Tabs","editorList","Editor","uiOptionsUpdate","uiOptions","newUiOptions","filteredEditors","defaultActiveKey","tab","margin","schemaUpdate","uiSchemaUpdate","read","reader","FileReader","p","Promise","resolve","onload","contents","result","readAsText","buttonStyle","marginLeft","Toolbar","save","filename","json","window","document","createElement","URL","createObjectURL","Blob","download","body","appendChild","click","removeChild","write","open","undo","redo","updateSettings","newForm","loadFile","accept","FileAddOutlined","FolderOpenOutlined","SaveOutlined","UndoOutlined","RedoOutlined","ActionTypes","UNDO","REDO","confirm","Modal","tipFormatter","flag","innerWidth","Settings","included","left","right","checked","rootNode","setMenu","sytle","okType","closable","maskClosable","onOk","localStorage","removeItem","location","reload","siderWidth","inlineMode","reset","List","listItems","Header","Layout","Sider","Content","App","collapsed","toggle","collapsible","background","padding","overflow","boxShadow","height","minHeight","bordered","verticalAlign","SchemaView","UiSchemaView","FormDataView","AppContainer","loading","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b8915348.chunk.js","sourcesContent":["const basic = {\n  schema: {\n    type: 'object',\n    title: 'Basic',\n    properties: {\n      object: { type: 'object', title: 'Object', properties: {} },\n      text: { type: 'string', title: 'Text' },\n      checkbox: { type: 'boolean', title: 'Checkbox' },\n      checkboxes: {\n        type: 'array',\n        title: 'Check Boxes',\n        items: {\n          type: 'string',\n          enum: ['option-1', 'option-2', 'option-3'],\n        },\n        uniqueItems: true,\n      },\n      dropdown: {\n        type: 'string',\n        title: 'Dropdown',\n        enum: ['option-1', 'option-2', 'option-3'],\n        enumNames: ['Option 1', 'Option 2', 'Option 3'],\n      },\n      number: { type: 'number', title: 'Number' },\n      textarea: { type: 'string', title: 'Text Area' },\n      datetime: { type: 'string', title: 'Date Time' },\n    },\n  },\n  uiSchema: {\n    textarea: { 'ui:widget': 'textarea' },\n    datetime: { 'ui:widget': 'datetime' },\n    checkboxes: {\n      'ui:widget': 'checkboxes',\n    },\n  },\n};\n\nmodule.exports = {\n  schema: {\n    type: 'object',\n    properties: {\n      basic: basic.schema,\n    },\n  },\n  uiSchema: {\n    basic: basic.uiSchema,\n  },\n};\n","module.exports = {\n  leftSiderWidth: 300,\n  rightSiderWidth: 360,\n  formWidth: 600,\n  isInlineMode: true,\n  subViews: ['schema', 'uiSchema', 'formData'],\n};\n","function isEmptyObject(obj) {\n  if (!obj) return true;\n  for (const i in obj) {\n    if (obj[i] !== undefined) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isLeaf(node) {\n  return node.isLeaf;\n}\n\nfunction schema2tree(name, schema, uiSchema) {\n  return [schema2node([name], schema, uiSchema)];\n}\n\nlet forceChange = ((FORCE_CHANGE_KEY) => (obj) => {\n  // workaround for forcing rjsf to rerender because the schema still deep equal to after reordering properties.\n  if (FORCE_CHANGE_KEY in obj) {\n    delete obj[FORCE_CHANGE_KEY];\n  } else {\n    obj[FORCE_CHANGE_KEY] = undefined;\n  }\n})(`__${Date.now()}__`);\n\ntry {\n  if (process.env.NODE_ENV === 'test') {\n    forceChange = (a) => a;\n  }\n} catch (e) {}\n\nfunction schema2node(path, schema, uiSchema) {\n  if (!schema) return null;\n  const key = path.join('.');\n  const name = path[path.length - 1];\n  if (schema.type === 'object') {\n    let children = [];\n    for (const i in schema.properties) {\n      const nextPath = [...path, i];\n      const child = schema2node(nextPath, schema.properties[i], uiSchema && uiSchema[i]);\n      if (child) children.push(child);\n    }\n    return {\n      key,\n      name,\n      //path,\n      schema,\n      uiSchema,\n      children,\n    };\n  }\n  if (schema.type === 'array') {\n    let children;\n    if (Array.isArray(schema.items)) {\n      const nextPath = [...path, '[items]'];\n      children = [\n        {\n          key: key + '.[items]',\n          name: '[items]',\n          //path: nextPath,\n          children: schema.items.map((a, i) =>\n            schema2node([...nextPath, i.toString()], schema.items[i], uiSchema && uiSchema.items && uiSchema.items[i])\n          ),\n        },\n      ];\n      if ('additionalItems' in schema) {\n        const nextPath = [...path, 'additionalItems'];\n        children.push(schema2node(nextPath, schema.additionalItems, uiSchema && uiSchema.additionalItems));\n      }\n    } else {\n      children = [schema2node([...path, 'items'], schema.items, uiSchema && uiSchema.items)];\n    }\n\n    return {\n      key,\n      name,\n      schema,\n      uiSchema,\n      children,\n      //path,\n    };\n  }\n  return {\n    key,\n    name,\n    //path,\n    schema,\n    uiSchema,\n    isLeaf: true,\n  };\n}\n\nfunction getNodeByPath(tree, path) {\n  let node;\n  let children = tree;\n  for (const i of path) {\n    node = children.find((a) => a.name === i);\n    if (!node) return null;\n    children = node.children;\n  }\n  return node;\n}\n\nfunction getNode(tree, key) {\n  return getNodeByPath(tree, key.split('.'));\n}\n\nfunction updateParentKey(tree, parentKey) {\n  return tree.map((node) => {\n    const key = parentKey + '.' + node.name;\n    return Object.assign(\n      {},\n      node,\n      {\n        key: parentKey + '.' + node.name,\n      },\n      node.children && {\n        children: updateParentKey(node.children, key),\n      }\n    );\n  });\n}\n\nfunction getNodeParentKey(node) {\n  return node.key.substring(0, node.key.length - node.name.length - 1);\n}\n\nfunction updateNodeParentKeyAndName(node, parentKey, name) {\n  if (!name) {\n    name = node.name;\n  }\n  if (!parentKey) {\n    parentKey = getNodeParentKey(node);\n  }\n  const newKey = parentKey ? parentKey + '.' + name : name;\n  if (node.key === newKey) return node;\n  return Object.assign(\n    {},\n    node,\n    {\n      name,\n      key: newKey,\n    },\n    node.children && {\n      children: updateParentKey(node.children, newKey),\n    }\n  );\n}\n\nfunction updateSchema(node, newChildren) {\n  let newSchema = Object.assign({}, node.schema);\n  if (node.schema.type === 'object') {\n    let newProperties = {};\n    for (const child of newChildren) {\n      newProperties[child.name] = child.schema;\n    }\n    newSchema.properties = newProperties;\n  } else if (node.schema.type === 'array') {\n    if (Array.isArray(node.schema.items)) {\n      // items is array\n      newSchema = Object.assign({}, node.schema);\n      const newItemsNode = newChildren.find((a) => a.name === '[items]');\n      const oldItemsNode = node.children.find((a) => a.name === '[items]');\n      if (newItemsNode !== oldItemsNode) {\n        // items field updated\n        if (newItemsNode) {\n          newSchema.items = newItemsNode.children.map((a) => a.schema);\n        } else {\n          delete newSchema.items;\n        }\n      } else {\n        // additionalItems field updated\n        const newAdditionalItemsNode = newChildren.find((a) => a.name === 'additionalItems');\n        if (newAdditionalItemsNode) {\n          newSchema.additionalItems = newAdditionalItemsNode.schema;\n        } else {\n          delete newSchema.additionalItems;\n        }\n      }\n    } else {\n      // items is not array\n      const newItemsNode = newChildren.find((a) => a.name === 'items');\n      if (newItemsNode) {\n        newSchema.items = newItemsNode.schema;\n      } else {\n        delete newSchema.items;\n      }\n    }\n  }\n  return newSchema;\n}\n\nfunction updateUiSchema(node, newChildren) {\n  let newUiSchema = {};\n  for (const i in node.uiSchema) {\n    if (i.startsWith('ui:') || i === 'classNames') {\n      newUiSchema[i] = node.uiSchema[i];\n    }\n  }\n  if (node.schema.type === 'object') {\n    for (const child of newChildren) {\n      if (child.uiSchema) {\n        newUiSchema[child.name] = child.uiSchema;\n      }\n    }\n  } else if (node.schema.type === 'array') {\n    if (Array.isArray(node.schema.items)) {\n      // items is array\n      const newItemsNode = newChildren.find((a) => a.name === '[items]');\n      const oldItemsNode = node.children.find((a) => a.name === '[items]');\n      if (newItemsNode !== oldItemsNode) {\n        // items field updated\n        if (newItemsNode) {\n          let empty = true;\n          newUiSchema.items = newItemsNode.children.map((a) => {\n            empty = empty && !a.uiSchema;\n            return a.uiSchema || null;\n          });\n          if (empty) {\n            delete newUiSchema.items;\n          }\n        }\n        if ('additionalItems' in node.uiSchema) {\n          newUiSchema.additionalItems = node.uiSchema.additionalItems;\n        }\n      } else {\n        // additionalItems field updated\n        if ('items' in node.uiSchema) {\n          newUiSchema.items = node.uiSchema.items;\n        }\n        const newAdditionalItemsNode = newChildren.find((a) => a.name === 'additionalItems');\n        if (newAdditionalItemsNode) {\n          newUiSchema.additionalItems = newItemsNode.children.map((a) => a.schema);\n        }\n      }\n    } else {\n      // items is not array\n      const newItemsNode = newChildren.find((a) => a.name === 'items');\n      if (newItemsNode && newItemsNode.uiSchema) {\n        newUiSchema.items = newItemsNode.uiSchema;\n      }\n    }\n  }\n  return newUiSchema;\n}\n\nfunction updateNodeByNewChildren(oldNode, newChildren) {\n  if (!oldNode.schema) {\n    return { ...oldNode, children: newChildren };\n  }\n  const schema = updateSchema(oldNode, newChildren);\n  const uiSchema = updateUiSchema(oldNode, newChildren);\n  const newNode = Object.assign({}, oldNode, {\n    schema,\n    uiSchema,\n    children: newChildren,\n  });\n  if (isEmptyObject(uiSchema)) {\n    delete newNode.uiSchema;\n  }\n  return newNode;\n}\n\nfunction updateArrayIndex(tree) {\n  return tree.map((node, i) =>\n    node.name === i.toString() ? node : updateNodeParentKeyAndName(node, null, i.toString())\n  );\n}\n\nfunction _removeNodeByPath(tree, [head, ...tail], arrayItemsFlag = 0) {\n  if (!head && head !== 0) {\n    return tree;\n  }\n  let removed = false;\n  let newTree = [];\n  if (!tail.length) {\n    let newTree = tree.filter((a) => a.name !== head);\n    if (arrayItemsFlag === 2) {\n      newTree = updateArrayIndex(newTree);\n    }\n    return newTree.length === tree.length ? tree : newTree;\n  }\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n      arrayItemsFlag = 1;\n    } else if (arrayItemsFlag === 1 && head === '[items]') {\n      arrayItemsFlag = 2;\n    } else {\n      arrayItemsFlag = 0;\n    }\n    const newChildren = _removeNodeByPath(node.children, tail, arrayItemsFlag);\n    if (newChildren === node.children) {\n      // no change\n      return tree;\n    }\n    removed = true;\n    let newNode = updateNodeByNewChildren(node, newChildren);\n    let newSchema = null;\n    if (tail.length === 1 && (newSchema = newNode.schema) && newSchema.required) {\n      const newRequired = newSchema.required.filter((a) => a !== tail[0]);\n      if (newRequired.length !== newSchema.required.length) {\n        newNode.schema = Object.assign({}, newSchema, {\n          required: newRequired.length ? newRequired : undefined,\n        });\n      }\n    }\n    newTree.push(newNode);\n  }\n  return removed ? newTree : tree;\n}\n\nfunction removeNodeByPath(tree, path) {\n  return _removeNodeByPath(tree, path);\n}\n\nfunction removeNode(tree, key) {\n  return _removeNodeByPath(tree, key.split('.'));\n}\n\nfunction _addNodeByPath(tree, [head, ...tail], position, node2Add, arrayItemsFlag = 0) {\n  if (!head && head !== 0) {\n    return tree;\n  }\n  let added = false;\n  let newTree = [];\n  if (!tail.length) {\n    tree = tree || [];\n    let added = false;\n    for (const i in tree) {\n      const cn = tree[i];\n      if (cn.name !== head) {\n        newTree.push(cn);\n        continue;\n      }\n      added = true;\n      if (position < 0) {\n        if (!arrayItemsFlag && tree.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n        newTree.push(updateNodeParentKeyAndName(node2Add, getNodeParentKey(cn)));\n      }\n      if (position === 0) {\n        if (isLeaf(cn)) return tree;\n        if (!arrayItemsFlag && cn.children.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n\n        let newNodeChildren = [...(cn.children || []), updateNodeParentKeyAndName(node2Add, cn.key)];\n        if (arrayItemsFlag === 1) {\n          newNodeChildren = updateArrayIndex(newNodeChildren);\n        }\n        newTree.push(updateNodeByNewChildren(cn, newNodeChildren));\n      } else {\n        newTree.push(cn);\n      }\n      if (position > 0) {\n        if (!arrayItemsFlag && tree.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n        newTree.push(updateNodeParentKeyAndName(node2Add, getNodeParentKey(cn)));\n      }\n    }\n    if (!added) return tree;\n    if (arrayItemsFlag === 2) {\n      return updateArrayIndex(newTree);\n    }\n    return newTree;\n  }\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n      arrayItemsFlag = 1;\n    } else if (arrayItemsFlag === 1 && head === '[items]') {\n      arrayItemsFlag = 2;\n    } else {\n      arrayItemsFlag = 0;\n    }\n    const newChildren = _addNodeByPath(node.children, tail, position, node2Add, arrayItemsFlag);\n    if (newChildren === node.children) {\n      // no change\n      return tree;\n    }\n    added = true;\n    newTree.push(updateNodeByNewChildren(node, newChildren));\n  }\n  return added ? newTree : tree;\n}\n\nfunction addNodeByPath(tree, [head, ...tail], position, newNode) {\n  return _addNodeByPath(tree, [head, ...tail], position, newNode);\n}\n\nfunction addNode(tree, targetKey, position, newNode) {\n  return _addNodeByPath(tree, targetKey.split('.'), position, newNode);\n}\n\nfunction _moveNodeByPath(tree, [sh, ...st], [th, ...tt], position, arrayItemsFlag = 0) {\n  if (!sh) return tree;\n  if (sh === th && tt.length) {\n    let newTree = [];\n    let updated = false;\n    for (const node of tree) {\n      if (node.name !== sh) {\n        newTree.push(node);\n        continue;\n      }\n      if (isLeaf(node)) return tree;\n      if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n        arrayItemsFlag = 1;\n      } else if (arrayItemsFlag === 1 && sh === '[items]') {\n        arrayItemsFlag = 2;\n      } else {\n        arrayItemsFlag = 0;\n      }\n      const newChildren = _moveNodeByPath(node.children, st, tt, position, arrayItemsFlag);\n      if (newChildren === node.children) {\n        // no change\n        return tree;\n      }\n      updated = true;\n      if (tt.length === 1 && st.length === 1 && node.schema && node.schema.type === 'object') {\n        // reorder object properties\n        let properties = {};\n        for (const child of newChildren) {\n          properties[child.name] = child.schema;\n        }\n        let schema = Object.assign({}, node.schema, {\n          properties,\n        });\n        forceChange(schema);\n        newTree.push(\n          Object.assign({}, node, {\n            schema,\n            children: newChildren,\n          })\n        );\n      } else {\n        newTree.push(updateNodeByNewChildren(node, newChildren));\n      }\n    }\n    return updated ? newTree : tree;\n  }\n\n  if (!st.length && !tt.length) {\n    let newTree = [];\n    let updated = false;\n    const node2move = tree.find((a) => a.name === sh);\n    if (!node2move) return tree;\n    for (const i in tree) {\n      const cn = tree[i];\n      if (cn.name === sh) continue;\n      if (cn.name === th) {\n        updated = true;\n        if (position < 0) newTree.push(node2move);\n        if (position === 0) {\n          if (isLeaf(cn)) return tree;\n          let newNodeChildren = [...(cn.children || []), updateNodeParentKeyAndName(node2move, cn.key)];\n          if (arrayItemsFlag === 1) {\n            newNodeChildren = updateArrayIndex(newNodeChildren);\n          }\n          newTree.push(updateNodeByNewChildren(cn, newNodeChildren));\n        } else {\n          newTree.push(cn);\n        }\n        if (position > 0) newTree.push(node2move);\n      } else {\n        newTree.push(cn);\n      }\n    }\n    if (arrayItemsFlag === 2) {\n      newTree = updateArrayIndex(newTree);\n    }\n    return updated ? newTree : tree;\n  }\n\n  const node2move = getNodeByPath(tree, [sh, ...st]);\n  if (!node2move) return tree;\n  const tmpTree = _removeNodeByPath(tree, [sh, ...st], arrayItemsFlag);\n  const newTree = _addNodeByPath(tmpTree, [th, ...tt], position, node2move, arrayItemsFlag);\n  return newTree === tmpTree ? tree : newTree;\n}\n\nfunction moveNodeByPath(tree, sourceNode, targetNode, position) {\n  return _moveNodeByPath(tree, sourceNode, targetNode, position);\n}\nfunction moveNode(tree, sourceKey, targetKey, position) {\n  return _moveNodeByPath(tree, sourceKey.split('.'), targetKey.split('.'), position);\n}\n\nvar allowedUpdatedTypes = ['string', 'number', 'integer', 'boolean'];\n\nfunction _updateNodeByPath(tree, [head, ...tail], nodeUpdate) {\n  let newTree = [];\n  let updated = false;\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    let newNode = Object.assign({}, node);\n    if (!tail.length) {\n      const { schema, uiSchema, name } = nodeUpdate;\n      let nu = Object.assign({}, nodeUpdate);\n      delete nu.schema;\n      delete nu.uiSchema;\n      delete nu.name;\n      delete nu.children;\n      delete nu.key;\n      newNode = Object.assign(newNode, nu);\n      let typeUpdated = false;\n      if (schema) {\n        updated = true;\n        const oldSchema = node.schema;\n        let newSchema = Object.assign({}, schema);\n        if (!newSchema.type) {\n          newSchema.type = oldSchema.type;\n        } else {\n          if (newSchema.type !== oldSchema.type) {\n            if (allowedUpdatedTypes.includes(newSchema.type) && allowedUpdatedTypes.includes(oldSchema.type)) {\n              typeUpdated = true;\n              for (const i in newSchema) {\n                if (!['type', 'title', 'description'].includes(i)) {\n                  delete newSchema[i];\n                }\n              }\n            } else {\n              return tree;\n            }\n          }\n        }\n\n        if (newSchema.type === 'object') {\n          newSchema.properties = oldSchema.properties;\n        }\n        if (newSchema.type === 'array') {\n          newSchema.items = oldSchema.items;\n          newSchema.additionalItems = oldSchema.items;\n        }\n        newNode.schema = newSchema;\n      }\n      if (uiSchema) {\n        updated = true;\n        const oldUiSchema = node.uiSchema;\n        const newUiSchema = {};\n        for (const i in uiSchema) {\n          if (i.startsWith('ui:') || i === 'classNames') {\n            newUiSchema[i] = uiSchema[i];\n          }\n        }\n        if (typeUpdated) delete newUiSchema['ui:widget'];\n        for (const i in node.uiSchema) {\n          if (!(i.startsWith('ui:') || i === 'classNames')) {\n            newUiSchema[i] = oldUiSchema[i];\n          }\n        }\n        if (isEmptyObject(newUiSchema)) {\n          delete newNode.uiSchema;\n        } else {\n          newNode.uiSchema = newUiSchema;\n        }\n      }\n      if (name && name !== newNode.name) {\n        if (tree.find((a) => a.name === name)) return tree;\n        updated = true;\n        newNode = updateNodeParentKeyAndName(newNode, null, name);\n      }\n      newTree.push(newNode);\n    } else {\n      if (node.children) {\n        const newChildren = _updateNodeByPath(node.children, tail, nodeUpdate);\n        if (newChildren === node.children) {\n          return tree;\n        }\n        updated = true;\n        let newNode = updateNodeByNewChildren(node, newChildren);\n        // update required\n        let newSchema = null;\n        if (\n          tail.length === 1 &&\n          nodeUpdate.name &&\n          (newSchema = newNode.schema) &&\n          newSchema.required &&\n          newSchema.required.includes(tail[0])\n        ) {\n          newNode.schema = Object.assign({}, newSchema, {\n            required: newSchema.required.map((a) => (a === tail[0] ? nodeUpdate.name : a)),\n          });\n        }\n        newTree.push(newNode);\n      } else {\n        return tree;\n      }\n    }\n  }\n  return updated ? newTree : tree;\n}\n\nfunction updateNodeByPath(tree, path, nodeUpdate) {\n  return _updateNodeByPath(tree, path, nodeUpdate);\n}\n\nfunction updateNode(tree, targetKey, nodeUpdate) {\n  return updateNodeByPath(tree, targetKey.split('.'), nodeUpdate);\n}\n\nvar SEPERATOR = '_';\nfunction getNodeByRjsfId(tree, rjsfId) {\n  for (const node of tree) {\n    if (node && node.name === rjsfId) {\n      return node;\n    }\n    if (rjsfId.startsWith(node.name) && rjsfId[node.name.length] === SEPERATOR) {\n      if (node.schema.type === 'array') {\n        rjsfId = rjsfId.slice(node.name.length + 1);\n        const i = rjsfId.indexOf(SEPERATOR);\n        const index = i > 0 ? rjsfId.slice(0, i) : rjsfId;\n        if (isNaN(index)) return null;\n        const rest = i > 0 ? rjsfId.slice(i + 1) : null;\n        if (Array.isArray(node.schema.items)) {\n          if (+index < node.schema.items.length) {\n            let n = node.children.find((a) => a.name === '[items]');\n            n = n && n.children.find((a) => a.name === index);\n            return rest ? n && getNodeByRjsfId(n.children, rjsfId.slice(i + 1)) : n;\n          } else {\n            let n = node.children.find((a) => a.name === 'additionalItems');\n            return rest ? n && getNodeByRjsfId(n.children, rest) : n;\n          }\n        } else {\n          let n = node.children.find((a) => a.name === 'items');\n          return rest ? n && getNodeByRjsfId(n.children, rjsfId.slice(i + 1)) : n;\n        }\n      }\n\n      if (node.children) {\n        rjsfId = rjsfId.slice(node.name.length + 1);\n        const n = getNodeByRjsfId(node.children, rjsfId);\n        if (n) return n;\n      }\n    }\n  }\n  return null;\n}\n\nexport {\n  schema2tree,\n  removeNodeByPath,\n  addNodeByPath,\n  moveNodeByPath,\n  updateNodeByPath,\n  getNode,\n  removeNode,\n  addNode,\n  moveNode,\n  updateNode,\n  schema2node,\n  getNodeByRjsfId,\n};\n\nexport default {\n  schema2tree,\n  removeNodeByPath,\n  addNodeByPath,\n  moveNodeByPath,\n  updateNodeByPath,\n\n  getNode,\n  removeNode,\n  addNode,\n  moveNode,\n  updateNode,\n  schema2node,\n  getNodeByRjsfId,\n};\n","import { schema2tree, schema2node, removeNode, addNode, moveNode, updateNode, getNodeByRjsfId } from './core';\nimport defaultSettings from './default/settings';\nimport defaultMenuSchema from './default/menu';\nimport undoable from 'redux-undo';\nimport { includeAction } from 'redux-undo';\nimport { combineReducers } from 'redux';\n\nconst defaultMenu = schema2node(['menu'], defaultMenuSchema.schema, defaultMenuSchema.uiSchema);\nconst DEFAULT_TREE_NAME = 'root';\n\nconst emptyTree = schema2tree(DEFAULT_TREE_NAME, { type: 'object', properties: {} });\n\nfunction tree(state = emptyTree, action) {\n  switch (action.type) {\n    case 'TREE_CLEAR':\n      return emptyTree;\n    case 'TREE_SET_TREE': {\n      const { name, schema, uiSchema } = action.payload;\n      return schema2tree(\n        name || (state[0] && state[0].name) || DEFAULT_TREE_NAME,\n        schema || state[0].schema,\n        uiSchema || state[0].uiSchema\n      );\n    }\n    case 'TREE_ADD_NODE': {\n      const { targetNodeKey, position, node2add } = action.payload;\n      return addNode(state, targetNodeKey, position, node2add);\n    }\n    case 'TREE_REMOVE_NODE':\n      const newState = removeNode(state, action.payload);\n      return newState.length ? newState : emptyTree;\n    case 'TREE_MOVE_NODE': {\n      const { source, target, position } = action.payload;\n      return moveNode(state, source, target, position);\n    }\n    case 'TREE_UPDATE_NODE': {\n      const { target, nodeUpdate } = action.payload;\n      const newState = updateNode(state, target, nodeUpdate);\n      return newState;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction activeNodeKey(state = null, action) {\n  switch (action.type) {\n    case 'ACTIVE_NODE_KEY_SET':\n      return action.payload || null;\n    case 'TREE_UPDATE_NODE':\n      const { target, nodeUpdate } = action.payload;\n      if (state === target && nodeUpdate.name) {\n        const path = state.split('.');\n        if (path[path.length - 1] !== nodeUpdate.name) {\n          return path.slice(0, -1).join('.') + '.' + nodeUpdate.name;\n        }\n      }\n      return state;\n    case 'TREE_SET_TREE':\n    case 'TREE_CLEAR':\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction formData(state = {}, action) {\n  switch (action.type) {\n    case 'FORM_DATA_SET':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction settings(state = defaultSettings, action) {\n  switch (action.type) {\n    case 'SETTINGS_UPDATE':\n      return Object.assign({}, state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction menu(state = defaultMenu, action) {\n  switch (action.type) {\n    case 'MENU_SET': {\n      const { schema, uiSchema } = action.payload;\n      return schema2node(['menu'], schema, uiSchema);\n    }\n    case 'MENU_DEFAULT': {\n      return defaultMenu;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction menuOpenKeys(state = [], action) {\n  switch (action.type) {\n    case 'MENU_OPEN_KEYS_SET':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction removeUnnecessaryHistory(reducer) {\n  return (state, action) => {\n    let newState = reducer(state, action);\n    delete newState.history;\n    return newState;\n  };\n}\n\nvar reducer = combineReducers({\n  tree: removeUnnecessaryHistory(\n    undoable(tree, {\n      filter: includeAction([\n        'TREE_UPDATE_NODE',\n        'TREE_SET_TREE',\n        'TREE_CLEAR',\n        'TREE_ADD_NODE',\n        'TREE_REMOVE_NODE',\n        'TREE_MOVE_NODE',\n      ]),\n    })\n  ),\n  activeNodeKey,\n  settings,\n  menu,\n  formData,\n  menuOpenKeys,\n});\n\nexport default function (state, action) {\n  switch (action.type) {\n    case 'TREE_REMOVE_NODE_BY_RJSF_ID': {\n      const target = getNodeByRjsfId(state.tree.present, action.payload);\n      if (!target) return state;\n      action = {\n        type: 'TREE_REMOVE_NODE',\n        payload: target.key,\n      };\n      break;\n    }\n    case 'ACTIVE_NODE_KEY_SET_BY_RJSF_ID': {\n      const target = getNodeByRjsfId(state.tree.present, action.payload);\n      if (!target) return state;\n      action = {\n        type: 'ACTIVE_NODE_KEY_SET',\n        payload: target.key,\n      };\n      break;\n    }\n    case 'TREE_UPDATE_NODE_BY_RJSF_ID': {\n      const { rjsfId } = action.payload;\n      const target = getNodeByRjsfId(state.tree.present, rjsfId);\n      if (!target) return state;\n      action = {\n        type: 'TREE_UPDATE_NODE',\n        payload: { ...action.payload, target: target.key },\n      };\n      break;\n    }\n    default:\n      break;\n  }\n  return reducer(state, action);\n}\n","import { createStore } from 'redux';\nimport reducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nvar persistConfig = {\n  key: 'react-jsonschema-formbuilder',\n  storage,\n  stateReconciler: hardSet,\n  throttle: 15,\n};\n\nvar { schema2tree } = require('./core');\n\nvar form = {\n  schema: {\n    title: 'A registration form',\n    description: 'A simple form example.',\n    type: 'object',\n    required: ['firstName', 'lastName'],\n    properties: {\n      firstName: {\n        type: 'string',\n        title: 'First name',\n      },\n      lastName: {\n        type: 'string',\n        title: 'Last name',\n      },\n      age: {\n        type: 'integer',\n        title: 'Age',\n        description: '(earthian year)',\n      },\n      bio: {\n        type: 'string',\n        title: 'Bio',\n      },\n      password: {\n        type: 'string',\n        title: 'Password',\n        minLength: 3,\n      },\n      telephone: {\n        type: 'string',\n        title: 'Telephone',\n        minLength: 10,\n      },\n    },\n  },\n  uiSchema: {\n    firstName: {\n      classNames: '',\n      'ui:emptyValue': '',\n    },\n    age: {\n      'ui:widget': 'updown',\n    },\n    bio: {\n      'ui:widget': 'textarea',\n    },\n    password: {\n      'ui:widget': 'password',\n      'ui:help': 'Hint: Make it strong!',\n    },\n    date: {\n      'ui:widget': 'alt-datetime',\n    },\n    telephone: {\n      'ui:options': {\n        inputType: 'tel',\n      },\n    },\n  },\n};\n\nvar initTree = schema2tree('root', form.schema, form.uiSchema);\n\nvar persistedReducer = persistReducer(persistConfig, reducer);\n\nvar store = createStore(persistedReducer, {\n  tree: {\n    past: [],\n    present: initTree,\n    future: [],\n  },\n});\n\nvar persistor = persistStore(store);\n\nexport { store, persistor };\nexport default { store, persistor };\n","import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\n\nexport default class InlineEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n      value: this.props.value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ value: nextProps.value });\n  }\n\n  onChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n  onCompleteEditing = () => {\n    this.setState({ editing: false });\n    const newValue = this.state.value.trim();\n    if (newValue !== this.props.value) {\n      this.props.onChange && this.props.onChange(newValue);\n    }\n  };\n  onStartEditing = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState({ editing: true }, () => this.input && this.input.focus());\n  };\n\n  onCancelEditing = () => {\n    this.setState({\n      editing: false,\n      value: this.props.value,\n    });\n  };\n\n  renderEditing() {\n    return (\n      <Input\n        ref={(r) => (this.input = r)}\n        value={this.state.value}\n        onBlur={this.onCompleteEditing}\n        onChange={this.onChange}\n        onKeyUp={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (e.keyCode === 13) {\n            this.onCompleteEditing();\n          } else if (e.keyCode === 27) {\n            this.onCancelEditing();\n          }\n        }}\n      />\n    );\n  }\n\n  renderView() {\n    return (\n      <span>\n        {this.props.children}\n        <EditOutlined onClick={this.onStartEditing} />\n      </span>\n    );\n  }\n\n  render() {\n    if (this.state.editing) {\n      return this.renderEditing();\n    } else {\n      return this.renderView();\n    }\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Menu } from 'antd';\nconst { SubMenu, Item } = Menu;\n\nfunction nameGen(name, occupied) {\n  let n = 1;\n  let newName = name;\n  while (occupied && occupied.includes(newName)) {\n    newName = name + '_' + n;\n    n += 1;\n  }\n  return newName;\n}\n\nclass AddItemMenu extends React.Component {\n  onAddNode = (node2add) => {\n    const { addNode } = this.props;\n    const name = nameGen(\n      node2add.name,\n      this.props.node.children.map((a) => a.name)\n    );\n    addNode({ ...node2add, name });\n  };\n  render() {\n    const {\n      menu: { children: menuTree },\n      menuOpenKeys,\n      menuOpenChange,\n    } = this.props;\n    return (\n      <Menu mode=\"inline\" theme=\"dark\" openKeys={menuOpenKeys} onOpenChange={menuOpenChange}>\n        {menuTree.map((a) =>\n          a.schema && a.schema.type === 'object' && a.children && a.children.length ? (\n            <SubMenu key={a.key} title={a.schema.title || a.name}>\n              {a.children.map((b) => (\n                <Item key={b.key} onClick={() => this.onAddNode(b)}>\n                  {b.schema.title || b.name}\n                </Item>\n              ))}\n            </SubMenu>\n          ) : (\n            <Item key={a.key} onClick={() => this.onAddNode(a)}>\n              {a.schema.title || a.name}\n            </Item>\n          )\n        )}\n      </Menu>\n    );\n  }\n}\n\nexport default connect(\n  ({ menu, menuOpenKeys }) => ({ menu, menuOpenKeys }),\n  (dispatch, { node }) => ({\n    addNode: (node2add) =>\n      dispatch({\n        type: 'TREE_ADD_NODE',\n        payload: {\n          targetNodeKey: node.key,\n          position: 0,\n          node2add,\n        },\n      }),\n    menuOpenChange: (keys) =>\n      dispatch({\n        type: 'MENU_OPEN_KEYS_SET',\n        payload: keys,\n      }),\n  })\n)(AddItemMenu);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Popconfirm } from 'antd';\nimport { PlusCircleOutlined, CloseCircleFilled } from '@ant-design/icons';\nimport InlineEditor from '../InlineEditor';\nimport { Dropdown } from 'antd';\nimport AddItemMenu from './Menu';\n\nclass TreeNodeTitle extends PureComponent {\n  render() {\n    const { node, removeNode, updateNodeName, searchValue } = this.props;\n    const { name, key } = node;\n    const isLeaf = node.isLeaf;\n    const isRoot = node.name === node.key;\n    const isArray = node.schema.type === 'array';\n    const indexBefore = node.name.toLowerCase().indexOf(searchValue);\n    const indexAfter = indexBefore + searchValue.length;\n    return (\n      <span style={{ display: 'block' }}>\n        {searchValue && indexBefore >= 0 ? (\n          <InlineEditor value={node.name} onChange={(name) => updateNodeName(key, name)}>\n            {name.slice(0, indexBefore)}\n            <span style={{ color: '#f50' }}>{name.slice(indexBefore, indexAfter)}</span>\n            {name.slice(indexAfter)}\n          </InlineEditor>\n        ) : (\n          <InlineEditor value={node.name} onChange={(name) => updateNodeName(key, name)}>\n            {name}\n          </InlineEditor>\n        )}\n        <span className=\"pull-right\">\n          {!(isLeaf || isArray) ? (\n            <span className=\"form-builder-add-item-menu\" onClick={(e) => e.stopPropagation()}>\n              <Dropdown placement=\"bottomLeft\" trigger={['click']} overlay={<AddItemMenu node={node} />}>\n                <PlusCircleOutlined />\n              </Dropdown>\n            </span>\n          ) : null}\n          {!isRoot ? (\n            <span className=\"tree-node-delete\" onClick={(e) => e.stopPropagation()}>\n              <Popconfirm\n                placement=\"rightTop\"\n                title={`Delete \"${key}\"?`}\n                onConfirm={() => removeNode(key)}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <CloseCircleFilled />\n              </Popconfirm>\n            </span>\n          ) : null}\n        </span>\n      </span>\n    );\n  }\n}\n\nexport default connect(null, (dispatch) => ({\n  removeNode: (key) =>\n    dispatch({\n      type: 'TREE_REMOVE_NODE',\n      payload: key,\n    }),\n  updateNodeName: (key, name) =>\n    dispatch({\n      type: 'TREE_UPDATE_NODE',\n      payload: { target: key, nodeUpdate: { name } },\n    }),\n}))(TreeNodeTitle);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tree, Input } from 'antd';\nimport TreeNodeTitle from './TreeNodeTitle';\nconst { TreeNode } = Tree;\nconst { Search } = Input;\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedKeys: ['root'],\n      searchValue: '',\n      searchExpanded: [],\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeNodeKey && nextProps.activeNodeKey !== this.props.activeNodeKey) {\n      let path = nextProps.activeNodeKey.split('.');\n      let expandedKeys = [...this.state.expandedKeys];\n      const n = path.length;\n      for (var i = 1; i < n; i++) {\n        path[i] = path[i - 1] + '.' + path[i];\n        if (!expandedKeys.includes(path[i - 1])) {\n          expandedKeys.push(path[i - 1]);\n        }\n      }\n      this.setState({\n        expandedKeys,\n      });\n    }\n  }\n\n  onDrop = (info) => {\n    const dropKey = info.node.props.eventKey;\n    const dragKey = info.dragNode.props.eventKey;\n    const dropPos = info.node.props.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n    this.props.moveNode(dragKey, dropKey, dropPosition);\n  };\n\n  onExpand = (expandedKeys) => {\n    this.setState({\n      expandedKeys,\n    });\n  };\n\n  onChange = (e) => {\n    const { expandedKeys } = this.state;\n    const searchValue = e.target.value.trim().toLowerCase();\n    if (!searchValue) {\n      this.setState({\n        searchValue,\n        searchExpanded: [],\n      });\n      return;\n    }\n\n    let newSearchExpanded = [];\n    const loop = (data) => {\n      if (!data) return;\n      for (const item of data) {\n        if (item.name.toLowerCase().includes(searchValue)) {\n          let parents = item.key.split('.');\n          const n = parents.length;\n          for (let i = 1; i < n; i++) {\n            if (!(expandedKeys.includes(parents[i - 1]) || newSearchExpanded.includes(parents[i - 1]))) {\n              newSearchExpanded.push(parents[i - 1]);\n            }\n            parents[i] = parents[i - 1] + '.' + parents[i];\n          }\n        }\n        loop(item.children);\n      }\n    };\n    loop(this.props.tree);\n    this.setState({\n      searchValue,\n      searchExpanded: newSearchExpanded,\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      expandedKeys: [...this.state.expandedKeys, ...this.state.searchExpanded],\n      searchExpanded: [],\n    });\n  };\n\n  render() {\n    const { tree, setActiveNode, activeNodeKey } = this.props;\n    const { searchValue, expandedKeys, searchExpanded } = this.state;\n    const loop = (data) =>\n      data.map((item) => {\n        if (item.children && item.children.length) {\n          return (\n            <TreeNode\n              key={item.key}\n              title={<TreeNodeTitle node={item} searchValue={searchValue} />}\n              isLeaf={item.isLeaf}\n            >\n              {loop(item.children)}\n            </TreeNode>\n          );\n        }\n        return (\n          <TreeNode\n            key={item.key}\n            title={<TreeNodeTitle node={item} searchValue={searchValue} />}\n            isLeaf={item.isLeaf}\n          />\n        );\n      });\n    const children = loop(tree);\n    return (\n      <div>\n        <Search placeholder=\"Search\" onChange={this.onChange} onBlur={this.onBlur} />\n        <Tree\n          className=\"form-builder-draggable-tree\"\n          expandedKeys={searchExpanded.length ? [...expandedKeys, ...searchExpanded] : expandedKeys}\n          selectedKeys={[activeNodeKey]}\n          draggable\n          onDragEnter={this.onDragEnter}\n          onDrop={this.onDrop}\n          onExpand={this.onExpand}\n          onSelect={([selected]) => setActiveNode(selected)}\n          blockNode\n        >\n          {children}\n        </Tree>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree: { present }, activeNodeKey }) => ({\n    tree: present,\n    activeNodeKey,\n  }),\n  (dispatch) => ({\n    moveNode: (source, target, position) =>\n      dispatch({\n        type: 'TREE_MOVE_NODE',\n        payload: {\n          source,\n          target,\n          position,\n        },\n      }),\n    removeNode: (target) =>\n      dispatch({\n        type: 'TREE_REMOVE_NODE',\n        payload: target,\n      }),\n    setActiveNode: (selectedKey) =>\n      dispatch({\n        type: 'ACTIVE_NODE_KEY_SET',\n        payload: selectedKey,\n      }),\n    updateNodeTitle: (target, name) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: {\n          target: target,\n          node: { name },\n          updateMode: 1,\n        },\n      }),\n  })\n)(Demo);\n","import Tree from './Tree';\nexport default Tree;\n","import React from 'react';\nimport ArrayField from '@rjsf/core/lib/components/fields/ArrayField';\n\nimport { getWidget, getUiOptions, optionsList, retrieveSchema, getDefaultRegistry } from './utils';\n\nclass ArrayFieldPatched extends ArrayField {\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData,\n      disabled,\n      readonly,\n      autofocus,\n      onBlur,\n      onFocus,\n      registry = getDefaultRegistry(),\n      rawErrors,\n    } = this.props;\n    const items = this.props.formData;\n    const { widgets, definitions, formContext } = registry;\n    const itemsSchema = retrieveSchema(schema.items, definitions, formData);\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = 'select', ...options } = {\n      ...getUiOptions(uiSchema),\n      enumOptions,\n    };\n    const Widget = getWidget(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema && idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n}\n\nexport default ArrayFieldPatched;\n","import React from 'react';\nimport * as types from '@rjsf/core/lib/types';\n\nimport { getWidget, getUiOptions, optionsList, getDefaultRegistry } from './utils';\n\nfunction BooleanField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry = getDefaultRegistry(),\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext, fields } = registry;\n  const { widget = 'checkbox', ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  let enumOptions;\n\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList({\n      oneOf: schema.oneOf.map((option) => ({\n        ...option,\n        title: option.title || (option.const === true ? 'Yes' : 'No'),\n      })),\n    });\n  } else {\n    enumOptions = optionsList({\n      enum: schema.enum || [true, false],\n      enumNames: schema.enumNames || (schema.enum && schema.enum[0] === false ? ['No', 'Yes'] : ['Yes', 'No']),\n    });\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      id={idSchema && idSchema.$id}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={title === undefined ? name : title}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n      DescriptionField={fields.DescriptionField}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  BooleanField.propTypes = types.fieldProps;\n}\n\nBooleanField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default BooleanField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getWidget, getUiOptions, isSelect, optionsList, getDefaultRegistry, hasWidget } from './utils';\n\nfunction StringField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    registry = getDefaultRegistry(),\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext } = registry;\n  const enumOptions = isSelect(schema) && optionsList(schema);\n  let defaultWidget = enumOptions ? 'select' : 'text';\n  if (format && hasWidget(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const { widget = defaultWidget, placeholder = '', ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      id={idSchema && idSchema.$id}\n      label={title === undefined ? name : title}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  StringField.propTypes = {\n    schema: PropTypes.object.isRequired,\n    uiSchema: PropTypes.object.isRequired,\n    idSchema: PropTypes.object,\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n    formData: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    registry: PropTypes.shape({\n      widgets: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])).isRequired,\n      fields: PropTypes.objectOf(PropTypes.func).isRequired,\n      definitions: PropTypes.object.isRequired,\n      formContext: PropTypes.object.isRequired,\n    }),\n    formContext: PropTypes.object.isRequired,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    rawErrors: PropTypes.arrayOf(PropTypes.string),\n  };\n}\n\nStringField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default StringField;\n","import SchemaField from '@rjsf/core/lib/components/fields/SchemaField';\nimport { notification } from 'antd';\n\nexport default class PatchedSchemaField extends SchemaField {\n  componentDidCatch(error, info) {\n    notification.error({\n      message: `Error: ${this.props.idSchema.$id}`,\n      description: error.toString(),\n      duration: 0,\n    });\n  }\n}\n","import React from 'react';\nimport { Alert } from 'antd';\nimport ArrayField from './ArrayField';\nimport BooleanField from './BooleanField';\nimport StringField from './StringField';\nimport SchemaField from './SchemaField';\nimport { getWidget as _getWidget } from '@rjsf/core/lib/utils';\nexport * from '@rjsf/core/lib/utils';\n\nfunction Error(msg) {\n  return () => <Alert message={msg} type=\"error\" showIcon />;\n}\n\nexport function getWidget(...args) {\n  try {\n    return _getWidget(...args);\n  } catch (e) {\n    return Error(e.toString());\n  }\n}\n\nfunction TitleField(props) {\n  const { id, title, required } = props;\n  return (\n    <legend id={id}>\n      {title}\n      {required ? '*' : null}\n    </legend>\n  );\n}\n\nexport function getDefaultRegistry() {\n  const fields = {\n    ...require('@rjsf/core/lib/components/fields').default,\n    ArrayField,\n    StringField,\n    BooleanField,\n    TitleField,\n    SchemaField,\n  };\n  return {\n    fields,\n    widgets: require('@rjsf/core/lib/components/widgets').default,\n    definitions: {},\n    formContext: {},\n  };\n}\n","import Form from '@rjsf/core/lib';\nimport { getDefaultRegistry } from './utils';\n\nexport default class FormPatch extends Form {\n  getRegistry() {\n    const { fields, widgets } = getDefaultRegistry();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      widgets: { ...widgets, ...this.props.widgets },\n      ArrayFieldTemplate: this.props.ArrayFieldTemplate,\n      ObjectFieldTemplate: this.props.ObjectFieldTemplate,\n      FieldTemplate: this.props.FieldTemplate,\n      definitions: this.props.schema.definitions || {},\n      formContext: this.props.formContext || {},\n    };\n  }\n}\n","import React from 'react';\n\nconst REQUIRED_FIELD_SYMBOL = '*';\n\nfunction Label(props) {\n  const { label, required, id } = props;\n  if (!label) {\n    // See #312: Ensure compatibility with old versions of React.\n    return <div />;\n  }\n  return (\n    <label className=\"control-label\" htmlFor={id}>\n      {label}\n      {required && <span className=\"required\">{REQUIRED_FIELD_SYMBOL}</span>}\n    </label>\n  );\n}\n\nexport function DefaultTemplate(props) {\n  const { id, classNames, label, children, errors, help, description, hidden, required, displayLabel } = props;\n  if (hidden) {\n    return children;\n  }\n\n  return (\n    <div className={classNames}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </div>\n  );\n}\n\nexport function DefaultObjectFieldTemplate(props) {\n  const { TitleField, DescriptionField } = props;\n  return (\n    <fieldset>\n      {(props.uiSchema['ui:title'] || props.title) && (\n        <TitleField\n          id={`${props.idSchema.$id}__title`}\n          title={props.title || props.uiSchema['ui:title']}\n          required={props.required}\n          formContext={props.formContext}\n        />\n      )}\n      {props.description && (\n        <DescriptionField\n          id={`${props.idSchema.$id}__description`}\n          description={props.description}\n          formContext={props.formContext}\n        />\n      )}\n      {props.properties.map((prop) => prop.content)}\n    </fieldset>\n  );\n}\n","import React from 'react';\nimport InlineEditor from '../InlineEditor';\nimport { connect } from 'react-redux';\nimport { Input, Popconfirm, Tooltip } from 'antd';\nimport { SelectOutlined, DeleteOutlined } from '@ant-design/icons';\nconst { getNodeByRjsfId } = require('../core');\nconst { TextArea } = Input;\n\nconst ACTIVE_STYLE = { backgroundColor: '#bae7ff' };\n\nclass ExtendedInlineEditor extends InlineEditor {\n  renderView() {\n    return (\n      <span className=\"fb-test\" onClick={this.onStartEditing}>\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nclass InlineTextAreaEditor extends ExtendedInlineEditor {\n  renderEditing() {\n    return (\n      <TextArea\n        ref={(r) => (this.input = r)}\n        value={this.state.value}\n        onBlur={this.onCompleteEditing}\n        onChange={this.onChange}\n        autoSize\n        onKeyUp={(e) => {\n          if (e.keyCode === 27) {\n            this.onCancelEditing();\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst ButtonGroup = connect(null, (dispatch, { id }) => ({\n  select: () => dispatch({ type: 'ACTIVE_NODE_KEY_SET_BY_RJSF_ID', payload: id }),\n  remove: () => dispatch({ type: 'TREE_REMOVE_NODE_BY_RJSF_ID', payload: id }),\n}))((props) => {\n  const { select, remove, id } = props;\n  return (\n    <Tooltip title={id} placement=\"right\">\n      <a href=\"#!\">\n        <SelectOutlined onClick={select} />\n      </a>\n      <Popconfirm title={`Remove ${id}?`} onConfirm={remove}>\n        <a href=\"#!\">\n          <DeleteOutlined />\n        </a>\n      </Popconfirm>\n    </Tooltip>\n  );\n});\n\nexport function fieldTemplateConnector(FieldTemplate) {\n  return connect(\n    ({ tree: { present }, activeNodeKey, settings: { isInlineMode } }, { id }) => {\n      const n = getNodeByRjsfId(present, id);\n      const active = n && n.key === activeNodeKey;\n      return { tree: present, active, isInlineMode };\n    },\n    (dispatch, { id, schema, uiSchema }) => ({\n      updateTitle: (title) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { schema: { ...schema, title } } },\n        }),\n      updateDescription: (description) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { schema: { ...schema, description } } },\n        }),\n      updateHelp: (help) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { uiSchema: { ...uiSchema, 'ui:help': help } } },\n        }),\n    })\n  )((props) => {\n    const {\n      id,\n      label,\n      description,\n      help,\n      schema,\n      updateTitle,\n      updateDescription,\n      updateHelp,\n      active,\n      classNames,\n      isInlineMode,\n    } = props;\n    if (!isInlineMode) return <FieldTemplate {...props} />;\n    const labelElement = label && (\n      <ExtendedInlineEditor value={label} onChange={updateTitle}>\n        {label}\n      </ExtendedInlineEditor>\n    );\n    const descriptionElement = description && (\n      <InlineTextAreaEditor value={description.props.description} onChange={updateDescription}>\n        {description}\n      </InlineTextAreaEditor>\n    );\n    const helpElement = help && (\n      <ExtendedInlineEditor value={help.props.help} onChange={updateHelp}>\n        {help}\n      </ExtendedInlineEditor>\n    );\n    return (\n      <div className={classNames} style={active ? ACTIVE_STYLE : null}>\n        {['object', 'array'].includes(schema.type) ? null : (\n          <div className=\"pull-right\">\n            {' '}\n            <ButtonGroup id={id} />{' '}\n          </div>\n        )}\n        <FieldTemplate\n          _label={label}\n          _description={description}\n          _help={help}\n          {...props}\n          classNames={null}\n          label={labelElement}\n          description={descriptionElement}\n          help={helpElement}\n        />\n      </div>\n    );\n  });\n}\n\nexport function objectFieldTemplateConnector(ObjectFieldTemplate) {\n  return connect(\n    ({ tree: { present }, activeNodeKey, settings: { isInlineMode } }, { idSchema }) => {\n      const n = idSchema && idSchema.$id && getNodeByRjsfId(present, idSchema.$id);\n      const active = n && n.key === activeNodeKey;\n      return { tree: present, active, isInlineMode };\n    },\n    (dispatch, { idSchema, schema }) => ({\n      updateTitle: (title) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: idSchema.$id, nodeUpdate: { schema: { ...schema, title } } },\n        }),\n      updateDescription: (description) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: idSchema.$id, nodeUpdate: { schema: { ...schema, description } } },\n        }),\n    })\n  )((props) => {\n    const { idSchema, title, description, updateTitle, updateDescription, active, isInlineMode } = props;\n    if (!isInlineMode) return <ObjectFieldTemplate {...props} />;\n    const titleElement = title && (\n      <span>\n        <ExtendedInlineEditor value={title} onChange={updateTitle}>\n          {title}\n        </ExtendedInlineEditor>\n        <span className=\"pull-right\">\n          {' '}\n          <ButtonGroup id={idSchema.$id} />{' '}\n        </span>\n      </span>\n    );\n    const descriptionElement = description && (\n      <InlineTextAreaEditor value={description} onChange={updateDescription}>\n        {description}\n      </InlineTextAreaEditor>\n    );\n\n    return (\n      <div style={active ? ACTIVE_STYLE : null}>\n        <ObjectFieldTemplate\n          _title={title}\n          _description={description}\n          {...props}\n          title={titleElement}\n          description={descriptionElement}\n        />\n      </div>\n    );\n  });\n}\n","import { DefaultTemplate, DefaultObjectFieldTemplate } from './Template';\nimport { fieldTemplateConnector, objectFieldTemplateConnector } from './connectors';\n\nexport const FieldTemplate = fieldTemplateConnector(DefaultTemplate);\nexport const ObjectFieldTemplate = objectFieldTemplateConnector(DefaultObjectFieldTemplate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Form from '../rjsf-patch/Form';\nimport { FieldTemplate, ObjectFieldTemplate } from '../Template';\n\nclass FormView extends React.Component {\n  render() {\n    if (!this.props.schema) {\n      return null;\n    }\n    const { name, schema, uiSchema, formData, setFormData, liveValidate } = this.props;\n    return (\n      <Form\n        schema={schema}\n        uiSchema={uiSchema}\n        formData={formData}\n        liveValidate={liveValidate}\n        FieldTemplate={FieldTemplate}\n        ObjectFieldTemplate={ObjectFieldTemplate}\n        idPrefix={name}\n        onChange={setFormData}\n      />\n    );\n  }\n}\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ name, schema, uiSchema }],\n    },\n    formData,\n    settings: { isLiveValidate },\n  }) => ({\n    name,\n    schema,\n    uiSchema,\n    formData,\n    liveValidate: isLiveValidate,\n  }),\n  (dispatch) => ({\n    setFormData: ({ formData }) =>\n      dispatch({\n        type: 'FORM_DATA_SET',\n        payload: formData,\n      }),\n  })\n)(FormView);\n","import React from 'react';\nimport { Input, Alert } from 'antd';\nconst { TextArea } = Input;\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  if (!objA || !objB) {\n    return false;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) && (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B'a keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default class JsonEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      string: JSON.stringify(value, null, 2),\n      value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!shallowEqual(nextProps.value, this.state.value)) {\n      this.setState({\n        value: nextProps.value,\n        string: JSON.stringify(nextProps.value, null, 2),\n        error: null,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.string !== this.state.string;\n  }\n\n  onChange = (e) => {\n    const value = e.target.value;\n    try {\n      const obj = value ? JSON.parse(value) : null;\n      this.setState(\n        {\n          value: obj,\n          string: value,\n          error: null,\n        },\n        () => this.props.onChange(obj)\n      );\n    } catch (error) {\n      this.setState({\n        string: value,\n        error,\n      });\n    }\n  };\n\n  renderErrorMessage() {\n    const { error } = this.state;\n    if (!error) return null;\n    const errorMessage = error.toString();\n    const message = (\n      <a\n        href=\"#!\"\n        onClick={() => {\n          const matched = /position ([0-9]+)/.exec(errorMessage);\n          const position = matched ? matched[1] : -1;\n          const input = this.input.textAreaRef;\n          input.selectionStart = position;\n          input.selectionEnd = position;\n          input.focus();\n        }}\n      >\n        {error.toString()}\n      </a>\n    );\n    return <Alert message={message} type=\"error\" showIcon />;\n  }\n\n  onClickPrettify = () => {\n    let { error } = this.state;\n    if (!error) {\n      this.setState({\n        string: JSON.stringify(this.props.value, null, 2),\n      });\n    }\n  };\n\n  render() {\n    const { string } = this.state;\n    return (\n      <div>\n        {this.renderErrorMessage() || (\n          <Alert\n            message={\n              <a href=\"#!\" onClick={this.onClickPrettify}>\n                Prettify\n              </a>\n            }\n            type=\"success\"\n            showIcon\n          />\n        )}\n        <TextArea {...this.props} ref={(ref) => (this.input = ref)} value={string} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport JsonEditor from '../JsonEditor';\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ schema }],\n    },\n  }) => ({ schema }),\n  (dispatch) => ({\n    setTree: (schema) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          schema,\n        },\n      }),\n  })\n)(({ schema, setTree }) => <JsonEditor value={schema} onChange={(value) => setTree(value)} autoSize />);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport JsonEditor from '../JsonEditor';\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ uiSchema }],\n    },\n  }) => ({ uiSchema }),\n  (dispatch) => ({\n    setTree: (uiSchema) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          uiSchema,\n        },\n      }),\n  })\n)(({ uiSchema, setTree }) => <JsonEditor value={uiSchema} onChange={(value) => setTree(value)} autoSize />);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport JsonEditor from '../JsonEditor';\n\nfunction name2title(name) {\n  if (!name) return name;\n  const words = name.indexOf('_') >= 0 ? name.split('_') : name.split(/(?=[A-Z])/);\n  return words.map((a) => a.charAt(0).toUpperCase() + a.slice(1)).join(' ');\n}\n\nfunction json2schema(data, name) {\n  const title = name ? name2title(name) : undefined;\n  if (typeof data === 'number') {\n    return {\n      type: Number.isInteger(data) ? 'integer' : 'number',\n      title,\n    };\n  }\n  if (typeof data === 'string') {\n    return {\n      type: 'string',\n      title,\n    };\n  }\n  if (typeof data === 'boolean') {\n    return {\n      type: 'boolean',\n      title,\n    };\n  }\n  if (typeof data === 'object') {\n    if (Array.isArray(data)) {\n      return {\n        type: 'array',\n        title,\n        items: json2schema(data[0]),\n      };\n    }\n    let properties = {};\n    for (const i in data) {\n      const s = json2schema(data[i], i);\n      if (s) {\n        properties[i] = s;\n      }\n    }\n    return {\n      type: 'object',\n      title,\n      properties,\n    };\n  }\n  return undefined;\n}\n\nexport default connect(\n  ({ formData }) => ({ formData }),\n  (dispatch) => ({\n    setFormData: (formData) =>\n      dispatch({\n        type: 'FORM_DATA_SET',\n        payload: formData,\n      }),\n    genForm: (formData) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          name: 'root',\n          schema: json2schema(formData, 'form'),\n          uiSchema: {},\n        },\n      }),\n  })\n)(({ formData, setFormData, genForm }) => (\n  <div>\n    <JsonEditor value={formData} onChange={(value) => setFormData(value)} autoSize />\n    <Button type=\"primary\" onClick={() => genForm(formData)}>\n      Gen Form\n    </Button>\n    <Button onClick={() => setFormData({})}>Clear</Button>\n  </div>\n));\n","import React from 'react';\nimport JsonEditor from '../JsonEditor';\nimport { Input } from 'antd';\n\nexport default class NodeJsonEditor extends React.Component {\n  static get key() {\n    return 'json-editor';\n  }\n  static get name() {\n    return 'Json';\n  }\n  static filter(node) {\n    return true;\n  }\n\n  constructor(props) {\n    super(props);\n    const { schema, uiSchema } = props;\n    this.state = {\n      schemaJsonString: JSON.stringify(schema, null, 2),\n      uiSchemaJsonString: JSON.stringify(schema, null, 2),\n      schema,\n      uiSchema,\n    };\n  }\n\n  render() {\n    const { node, updateNode } = this.props;\n    const { schema, uiSchema } = node;\n    const { properties, items, additionalItems, ...rschema } = schema;\n    return (\n      <div>\n        <Input value={node.name} onChange={(e) => updateNode({ name: e.target.value })} />\n        <JsonEditor value={rschema} onChange={(schema) => updateNode({ schema })} autoSize />\n        <JsonEditor value={uiSchema} onChange={(uiSchema) => updateNode({ uiSchema })} autoSize />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Input, InputNumber, Select, Row, Col, Button, List, Dropdown, Menu, Switch, Slider } from 'antd';\nimport { EditOutlined, CaretDownOutlined, CloseOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport lodash from 'lodash';\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nexport function _FormItemTemplate({ title, children }) {\n  return (\n    <Row className=\"ant-form-item\">\n      <Col className=\"ant-form-item-label\">\n        <label>{title}</label>\n      </Col>\n      <Col className=\"ant-form-item-control-wrapper\">{children}</Col>\n    </Row>\n  );\n}\n\nexport function FormItemTemplate({ title, children, remove }) {\n  return (\n    <List.Item\n      actions={\n        remove ? [<Button onClick={remove} size=\"small\" type=\"danger\" shape=\"circle\" icon={<CloseOutlined />} />] : null\n      }\n    >\n      <List.Item.Meta title={title} description={children} />\n    </List.Item>\n  );\n}\n\nclass TimeThrottle extends React.Component {\n  throttle = 1000;\n  editing = (<EditOutlined />);\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: null,\n      value: props.value,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n      this.setState({ timer: null });\n      this.onSubmitValue(this.state.value);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n        // this.props.onChange(this.state.value);\n      }\n      this.setState({\n        value: nextProps.value,\n        timer: null,\n      });\n    }\n  }\n\n  onChange = (value) => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      value: value,\n      timer: setTimeout(() => {\n        this.setState({ timer: null });\n        this.onSubmitValue(this.state.value);\n      }, this.throttle),\n    });\n  };\n\n  onSubmitValue(value) {\n    this.props.onChange(value);\n  }\n\n  onBlur = () => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      timer: null,\n    });\n    this.onSubmitValue(this.state.value);\n  };\n\n  onRemove = () => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      timer: null,\n    });\n    this.onSubmitValue(undefined);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nclass TimeThrottleInput extends TimeThrottle {\n  render() {\n    const { title, ...rest } = this.props;\n    return (\n      <FormItemTemplate\n        title={\n          <span>\n            {title}\n            {this.state.timer ? this.editing : null}\n          </span>\n        }\n        remove={this.onRemove}\n      >\n        <Input\n          {...rest}\n          value={this.state.value}\n          onChange={(e) => this.onChange(e.target.value)}\n          onBlur={this.onBlur}\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nclass TimeThrottleTextArea extends TimeThrottle {\n  render() {\n    const { title, ...rest } = this.props;\n    const titleElement = (\n      <span>\n        {title}\n        {this.state.timer ? this.editing : null}\n      </span>\n    );\n    return (\n      <FormItemTemplate title={titleElement} remove={this.onRemove}>\n        <TextArea\n          {...rest}\n          value={this.state.value}\n          onChange={(e) => this.onChange(e.target.value)}\n          onBlur={this.onBlur}\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nclass TimeThrottleRange extends TimeThrottle {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value[0] !== this.state.value[0] || nextProps.value[1] !== this.state.value[1]) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n        // this.props.onChange(this.state.value);\n      }\n      this.setState({\n        value: nextProps.value,\n        timer: null,\n      });\n    }\n  }\n  onSubmitValue(value) {\n    if (!value) {\n      this.props.onChange(value);\n    }\n    let [min, max] = value;\n    if (typeof min === 'string') {\n      if (min) {\n        min = this.props.value[0];\n      } else {\n        min = undefined;\n      }\n    }\n    if (typeof max === 'string') {\n      if (max) {\n        max = this.props.value[1];\n      } else {\n        max = undefined;\n      }\n    }\n    this.props.onChange([min, max]);\n  }\n  render() {\n    const {\n      value: [min, max],\n      timer,\n    } = this.state;\n    const { title } = this.props;\n    const titleElement = (\n      <span>\n        {title}\n        {timer ? this.editing : null}\n      </span>\n    );\n    return (\n      <FormItemTemplate title={titleElement} remove={this.onRemove}>\n        <InputNumber\n          onChange={(n) => {\n            this.onChange([typeof n === 'string' && !n ? undefined : n, max]);\n          }}\n          value={min === 0 && max === undefined ? '' : min}\n          style={{ width: 100, textAlign: 'center' }}\n          placeholder=\"Minimum\"\n        />\n        <Input\n          style={{ width: 30, borderLeft: 0, pointerEvents: 'none', backgroundColor: '#fff' }}\n          placeholder=\"~\"\n          disabled\n        />\n        <InputNumber\n          onChange={(n) => {\n            this.onChange([min, typeof n === 'string' && !n ? undefined : n]);\n          }}\n          value={max}\n          style={{ width: 100, textAlign: 'center', borderLeft: 0 }}\n          placeholder=\"Maximum\"\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nconst widgetMap = {\n  boolean: {\n    checkbox: 'CheckboxWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    hidden: 'HiddenWidget',\n  },\n  string: {\n    text: 'TextWidget',\n    password: 'PasswordWidget',\n    // email: \"EmailWidget\",\n    // hostname: \"TextWidget\",\n    // ipv4: \"TextWidget\",\n    // ipv6: \"TextWidget\",\n    uri: 'URLWidget',\n    'data-url': 'FileWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    textarea: 'TextareaWidget',\n    hidden: 'HiddenWidget',\n    date: 'DateWidget',\n    datetime: 'DateTimeWidget',\n    // \"date-time\": \"DateTimeWidget\",\n    'alt-date': 'AltDateWidget',\n    'alt-datetime': 'AltDateTimeWidget',\n    color: 'ColorWidget',\n    file: 'FileWidget',\n  },\n  number: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  integer: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  array: {\n    select: 'SelectWidget',\n    checkboxes: 'CheckboxesWidget',\n    files: 'FileWidget',\n  },\n};\n\nconst widgets = lodash(widgetMap)\n  .toPairs()\n  .flatMap(([type, widgets]) =>\n    lodash(widgets)\n      .toPairs()\n      .map(([widget]) => [widget, type])\n      .value()\n  )\n  .groupBy('0')\n  .toPairs()\n  .map(([widget, types]) => [widget, types.map((a) => a[1])])\n  .map(([widget, types]) => [\n    types.length > 1 ? ({ type }) => types.includes(type) : ((t) => ({ type }) => type === t)(types[0]),\n    widget,\n  ])\n  .map(([filter, widget]) => {\n    switch (widget) {\n      case 'select':\n      case 'radio':\n        return [(schema, uiSchema) => schema.enum && filter(schema, uiSchema), widget];\n\n      default:\n        return [filter, widget];\n    }\n  })\n  .value();\n\nfunction type({ node: { schema }, updateSchema: update }) {\n  const key = 'type';\n  const title = 'Type';\n  const availableTypes = ['string', 'number', 'integer', 'boolean'];\n  if (!availableTypes.includes(schema.type)) return [];\n  const value = (schema || {})[key];\n  return [\n    null,\n    <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n      <Select onChange={(value) => update({ [key]: value })} value={value} style={{ width: '100%' }}>\n        {availableTypes.map((key) => (\n          <Option key={key}>{key}</Option>\n        ))}\n      </Select>\n    </FormItemTemplate>,\n  ];\n}\n\nfunction title({ node: { schema }, updateSchema: update }) {\n  const key = 'title';\n  const title = 'Title';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n      />,\n    ];\n  }\n}\n\nfunction description({ node: { schema }, updateSchema: update }) {\n  const key = 'description';\n  const title = 'Description';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleTextArea\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n        autoSize\n      />,\n    ];\n  }\n}\n\nclass ClassNamesEditor extends React.Component {\n  colSizes = ['sm', 'md', 'lg', 'xl'];\n  style = { width: '100%' };\n\n  constructor(props) {\n    super(props);\n    const value = [...new Set(this.props.value.split(' ').filter((a) => a))];\n\n    const cols = this.extractCol(value);\n    this.state = {\n      col: cols.length ? cols[0][0] : 'md',\n      value: value,\n      options: value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      const value = nextProps.value.split(' ').filter((a) => a);\n      const { options } = this.state;\n      const newOptions = value.filter((a) => !options.includes(a));\n      this.setState({\n        value,\n        options: newOptions, //[...options, ...newOptions]\n      });\n    }\n  }\n\n  extractCol(classNames) {\n    return classNames\n      .filter((a) => a.startsWith('col-'))\n      .map((a) => a.split('-'))\n      .filter((a) => a.length === 3 && Number.isInteger(+a[2]) && this.colSizes.includes(a[1]))\n      .map(([a, b, c]) => [b, +c]);\n  }\n\n  renderMenu() {\n    return (\n      <Menu onClick={({ key }) => this.setState({ col: key })}>\n        {this.colSizes.map((a) => (\n          <Menu.Item key={a}>col-{a}-</Menu.Item>\n        ))}\n      </Menu>\n    );\n  }\n\n  sliderValue() {\n    const { value, col } = this.state;\n    return (this.extractCol(value).find((a) => a[0] === col) || [0, 0])[1];\n  }\n\n  onSliderChange = (value) => {\n    const { value: classNames, col } = this.state;\n\n    let found = false;\n    let newClassNames = classNames\n      .map((a) => {\n        let [perfix, b, v] = a.split('-');\n        if (perfix === 'col' && b === col && Number.isInteger(+v)) {\n          found = true;\n          return value ? `col-${b}-${value}` : '';\n        }\n        return a;\n      })\n      .filter((a) => a);\n    if (!found && value) {\n      newClassNames.push(`col-${col}-${value}`);\n    }\n    this.props.onChange(newClassNames.join(' '));\n  };\n\n  render() {\n    const { title, ...rest } = this.props;\n    const { options, value, col } = this.state;\n    return (\n      <FormItemTemplate title={title} remove={() => this.props.onChange(undefined)}>\n        <Row type=\"flex\" align=\"middle\">\n          <Col xs={4}>\n            <Dropdown overlay={this.renderMenu()}>\n              <Button type=\"link\">\n                {col} <CaretDownOutlined />\n              </Button>\n            </Dropdown>\n          </Col>\n          <Col xs={20}>\n            <Slider min={0} max={12} value={this.sliderValue()} onChange={this.onSliderChange} />\n          </Col>\n        </Row>\n        <Select\n          style={this.style}\n          mode=\"tags\"\n          tokenSeparators={[' ']}\n          {...rest}\n          value={value}\n          onChange={(value) => this.props.onChange(value.join(' '))}\n          onBlur={this.onBlur}\n        >\n          {options.map((a) => (\n            <Option key={a}>{a}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>\n    );\n  }\n}\n\nfunction classNames({ node: { uiSchema }, updateUiSchema: update }) {\n  const key = 'classNames';\n  const title = 'Class Names';\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <ClassNamesEditor key={key} title={title} value={value} onChange={(value) => update({ classNames: value })} />,\n    ];\n  }\n}\n\nfunction placeholder({ node: { schema, uiSchema }, updateUiOptions: update }) {\n  if (schema.type === 'object' || schema.type === 'array') {\n    return [];\n  }\n  const key = 'placeholder';\n  const title = 'Placeholder';\n  const uiOptions = (uiSchema || {})['ui:options'];\n  const value = (uiOptions || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput key={key} title={title} value={value} onChange={(value) => update({ [key]: value })} />,\n    ];\n  }\n}\n\nfunction help({ node: { uiSchema }, updateUiSchema: update }) {\n  const key = 'ui:help';\n  const title = 'Help';\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput key={key} title={title} value={value} onChange={(value) => update({ [key]: value })} />,\n    ];\n  }\n}\n\nfunction widget({ node: { schema, uiSchema }, updateUiSchema: update }) {\n  const key = 'ui:widget';\n  const title = 'Widget';\n  const availableWidgets = widgets.filter(([f]) => f(schema || {}, uiSchema || {}));\n  if (!availableWidgets.length) return [];\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select\n          onChange={(value) => update({ [key]: value || null })}\n          value={value}\n          style={{ width: '100%' }}\n          showSearch\n        >\n          {availableWidgets.map(([_, key]) => (\n            <Option key={key}>{key}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n}\nfunction pattern({ node: { schema }, updateSchema: update }) {\n  if (schema.type !== 'string') return [];\n  const key = 'pattern';\n  const title = 'Pattern';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n      />,\n    ];\n  }\n}\n\nfunction required({ node: { schema }, updateSchema: update }) {\n  const key = 'required';\n  const title = 'Required';\n  if (schema.type !== 'object') return [];\n  if (!schema.required) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  }\n  return [\n    null,\n    <FormItemTemplate key={key} title=\"Required\" remove={() => update({ [key]: undefined })}>\n      <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        onChange={(required) => update({ required })}\n        value={schema.required}\n      >\n        {Object.keys(schema.properties || {}).map((a) => (\n          <Option key={a}>{a}</Option>\n        ))}\n      </Select>\n    </FormItemTemplate>,\n  ];\n}\n\nconst rangeMeta = (match, key, title, minp, maxp) => ({ node: { schema }, updateSchema: update }) => {\n  if (!match(schema)) return [];\n  if (schema[minp] === undefined && schema[maxp] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [minp]: 0 })}>\n        {title}\n      </Menu.Item>,\n    ];\n  }\n  return [\n    null,\n    <TimeThrottleRange\n      key={key}\n      title={title}\n      value={[schema[minp], schema[maxp]]}\n      onChange={(value) => {\n        if (!value) {\n          update({ [minp]: undefined, [maxp]: undefined });\n        } else {\n          const [min, max] = value;\n          update({\n            [minp]: min ? min : max === undefined ? 0 : undefined,\n            [maxp]: max,\n          });\n        }\n      }}\n    />,\n  ];\n};\nconst length = rangeMeta((a) => a.type === 'string', 'length', 'Length', 'minLength', 'maxLength');\nconst range = rangeMeta((a) => a.type === 'number' || a.type === 'integer', 'range', 'Range', 'minimum', 'maximum');\nconst itemRange = rangeMeta((a) => a.type === 'array', 'itemRange', 'Item Range', 'minItems', 'maxItems');\n\nfunction uniqueItems({ node: { schema }, updateSchema: update }) {\n  const key = 'uniqueItems';\n  const title = 'Unique Items';\n  if (schema.type !== 'array') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: true })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <List.Item\n        actions={[\n          <Button onClick={() => update({ [key]: undefined })} size=\"small\" type=\"danger\" icon={<CloseOutlined />} />,\n        ]}\n      >\n        <List.Item.Meta title={title} />\n        <Switch defaultChecked onChange={(value) => update({ [key]: value })} />\n      </List.Item>,\n    ];\n  }\n}\n\nconst [enumKey, enumName] = [\n  ['enum', 'Enum'],\n  ['enumNames', 'Enum Names'],\n].map(([key, title]) => ({ node: { schema }, updateSchema: update }) => {\n  if (schema.type !== 'string') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select\n          mode=\"tags\"\n          style={{ width: '100%' }}\n          onChange={(values) => update({ [key]: values })}\n          value={schema[key]}\n        >\n          {schema[key].map((a) => (\n            <Select.Option key={a}>{a}</Select.Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n});\n\nconst formatOptions = ['date-time', 'email', 'hostname', 'ipv4', 'ipv6', 'uri'];\nfunction format({ node: { schema }, updateSchema: update }) {\n  const key = 'format';\n  const title = 'Format';\n  if (schema.type !== 'string') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select style={{ width: '100%' }} onChange={(value) => update({ [key]: value })} value={schema[key]}>\n          {formatOptions.map((a) => (\n            <Option key={a}>{a}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n}\n\nexport default class BasicEditor extends React.Component {\n  static get key() {\n    return 'basic-editor';\n  }\n\n  static get name() {\n    return 'Basic';\n  }\n\n  static filter(node) {\n    return node.schema;\n  }\n\n  name() {\n    return null;\n  }\n\n  render() {\n    const l = [\n      type,\n      title,\n      description,\n      required,\n      widget,\n      classNames,\n      help,\n      placeholder,\n      enumKey,\n      enumName,\n      pattern,\n      length,\n      range,\n      itemRange,\n      uniqueItems,\n      format,\n    ].map((f) => f(this.props));\n\n    const addable = l.map((a) => a[0]).filter((a) => a);\n    const editable = l.map((a) => a[1]).filter((a) => a);\n\n    if (addable.length) {\n      editable.push(\n        <List.Item key=\"addButton\">\n          <Dropdown trigger={['click']} overlay={<Menu>{addable}</Menu>}>\n            <Button style={{ width: '100%' }} type=\"primary\" icon={<PlusOutlined />} />\n          </Dropdown>\n        </List.Item>\n      );\n    }\n\n    return <List itemLayout=\"horizontal\" dataSource={editable} renderItem={(a) => a} />;\n  }\n\n  _render() {\n    return (\n      <form className=\"ant-form ant-form-horizontal\">\n        {this.name()}\n        <fieldset>\n          <legend>Schema</legend>\n          {this.title()}\n          {this.description()}\n        </fieldset>\n        <fieldset>\n          <legend>uiSchema</legend>\n          {this.widgets()}\n          {this.classNames()}\n          {this.help()}\n        </fieldset>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs } from 'antd';\nimport JsonEditor from './JsonEditor';\nimport BasicEditor from './BasicEditor';\n\nconst { getNode } = require('../core');\nconst { TabPane } = Tabs;\n\nconst editorList = [BasicEditor, JsonEditor];\n\nclass Editor extends React.Component {\n  updateUiOptions = (uiOptionsUpdate) => {\n    const { uiSchema = {}, key } = this.props.node;\n    const uiOptions = uiSchema['ui:options'] || {};\n    const newUiOptions = { ...uiOptions, ...uiOptionsUpdate };\n    for (const i in newUiOptions) {\n      if (newUiOptions[i] !== undefined) {\n        this.props.updateNode(key, { uiSchema: { ...uiSchema, 'ui:options': { ...uiOptions, ...newUiOptions } } });\n        return;\n      }\n    }\n    this.props.updateNode(key, { uiSchema: { ...uiSchema, 'ui:options': undefined } });\n  };\n\n  render() {\n    const { node, updateNode } = this.props;\n    if (!(node && node.schema)) return null;\n    const filteredEditors = editorList.filter((a) => a.filter(node));\n    return (\n      <Tabs defaultActiveKey={filteredEditors[0].key} type=\"card\">\n        {filteredEditors.map((Editor) => (\n          <TabPane tab={Editor.name} key={Editor.key}>\n            <div style={{ margin: '0px 16px' }}>\n              <Editor\n                key={node.key}\n                node={node}\n                updateNode={(nodeUpdate) => updateNode(node.key, nodeUpdate)}\n                updateSchema={(schemaUpdate) => updateNode(node.key, { schema: { ...node.schema, ...schemaUpdate } })}\n                updateUiSchema={(uiSchemaUpdate) =>\n                  updateNode(node.key, { uiSchema: { ...node.uiSchema, ...uiSchemaUpdate } })\n                }\n                updateUiOptions={this.updateUiOptions}\n              />\n            </div>\n          </TabPane>\n        ))}\n      </Tabs>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree: { present }, activeNodeKey }) => ({\n    node: activeNodeKey && getNode(present, activeNodeKey),\n  }),\n  (dispatch) => ({\n    updateNode: (target, nodeUpdate) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: {\n          target,\n          nodeUpdate,\n        },\n      }),\n  })\n)(Editor);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Tooltip, message, Select } from 'antd';\nimport { FileAddOutlined, FolderOpenOutlined, SaveOutlined, UndoOutlined, RedoOutlined } from '@ant-design/icons';\n\nimport { ActionTypes } from 'redux-undo';\n\nfunction write(filename, json) {\n  const a = window.document.createElement('a');\n  a.href = window.URL.createObjectURL(new Blob([JSON.stringify(json, null, 2)], { type: 'application/json' }));\n  a.download = `${filename}.json`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n}\n\nfunction read(e) {\n  var file = e.target.files[0];\n  if (!file) {\n    return;\n  }\n  var reader = new FileReader();\n\n  const p = new Promise(function (resolve) {\n    reader.onload = function (e) {\n      var contents = e.target.result;\n      resolve(contents);\n    };\n  });\n  reader.readAsText(file);\n  return p;\n}\n\nconst buttonStyle = { marginLeft: 8 };\nclass Toolbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  save = () => {\n    const { name, schema, uiSchema } = this.props.tree.present[0];\n    write(name, { name, schema, uiSchema });\n  };\n  open = async (e) => {\n    const s = await read(e);\n    try {\n      const { name, schema, uiSchema } = JSON.parse(s);\n      this.props.setTree({ name, schema, uiSchema });\n    } catch (e) {\n      message.error('Invalid json file!');\n    }\n  };\n  render() {\n    const { tree, undo, redo, settings, updateSettings, newForm } = this.props;\n    const { past, future } = tree;\n    return (\n      <span>\n        <input ref={(ref) => (this.loadFile = ref)} type=\"file\" accept=\"application/json\" onChange={this.open} hidden />\n        <Tooltip title=\"New\">\n          <Button style={buttonStyle} onClick={newForm} icon={<FileAddOutlined />} />\n        </Tooltip>\n        <Tooltip title=\"Open\">\n          <Button\n            style={buttonStyle}\n            onClick={() => this.loadFile && this.loadFile.click()}\n            icon={<FolderOpenOutlined />}\n          />\n        </Tooltip>\n        <Tooltip title=\"Save\">\n          <Button style={buttonStyle} onClick={this.save} icon={<SaveOutlined />} />\n        </Tooltip>\n        <Tooltip title=\"Undo\">\n          <Button style={buttonStyle} onClick={undo} disabled={!past.length} icon={<UndoOutlined />} />\n        </Tooltip>\n        <Tooltip title=\"Redo\">\n          <Button style={buttonStyle} onClick={redo} disabled={!future.length} icon={<RedoOutlined />} />\n        </Tooltip>\n        <Select\n          mode=\"multiple\"\n          style={{ width: 290, marginLeft: 12 }}\n          value={settings.subViews}\n          onChange={updateSettings}\n          placeholder=\"Select sub views...\"\n        >\n          <Select.Option key=\"schema\">Schema</Select.Option>\n          <Select.Option key=\"uiSchema\">Ui Schema</Select.Option>\n          <Select.Option key=\"formData\">Data</Select.Option>\n        </Select>\n      </span>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree, settings }) => ({ tree, settings }),\n  (dispatch) => ({\n    newForm: () =>\n      dispatch({\n        type: 'TREE_CLEAR',\n      }),\n    setTree: (payload) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload,\n      }),\n    undo: () => dispatch({ type: ActionTypes.UNDO }),\n    redo: () => dispatch({ type: ActionTypes.REDO }),\n    updateSettings: (subViews) =>\n      dispatch({\n        type: 'SETTINGS_UPDATE',\n        payload: { subViews },\n      }),\n  })\n)(Toolbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Slider, Switch, Button, List, Modal } from 'antd';\nconst { confirm } = Modal;\n\nconst tipFormatter = ((flag = false) => (number) => {\n  flag = !flag;\n  return flag ? number : window.innerWidth - number;\n})();\n\nclass Settings extends React.Component {\n  siderWidth() {\n    const { leftSiderWidth, rightSiderWidth } = this.props.settings;\n    return {\n      key: 'sider-width',\n      title: 'Sider Width',\n      description: (\n        <Slider\n          included\n          min={0}\n          max={window.innerWidth}\n          tipFormatter={tipFormatter}\n          range\n          value={[leftSiderWidth, window.innerWidth - rightSiderWidth]}\n          onChange={([left, right]) => {\n            this.props.updateSettings({\n              leftSiderWidth: left > 200 ? left : 200,\n              rightSiderWidth: window.innerWidth - right,\n            });\n          }}\n        />\n      ),\n    };\n  }\n\n  formWidth() {\n    return {\n      key: 'form-item',\n      title: 'Form Width',\n      description: (\n        <Slider\n          min={0}\n          max={window.innerWidth}\n          value={this.props.settings.formWidth}\n          onChange={(value) => {\n            this.props.updateSettings({\n              formWidth: value,\n            });\n          }}\n        />\n      ),\n    };\n  }\n\n  inlineMode() {\n    return {\n      key: 'inline-mode',\n      title: 'Inline Mode',\n      actions: [\n        <Switch\n          onChange={(v) => this.props.updateSettings({ isInlineMode: v })}\n          checked={this.props.settings.isInlineMode}\n        />,\n      ],\n    };\n  }\n\n  liveValidate() {\n    return {\n      key: 'live-validate',\n      title: 'Live Validate',\n      actions: [\n        <Switch\n          onChange={(v) => this.props.updateSettings({ isLiveValidate: v })}\n          checked={this.props.settings.isLiveValidate}\n        />,\n      ],\n    };\n  }\n\n  menu() {\n    const { setTree, rootNode, setMenu, menu } = this.props;\n    return {\n      key: 'menu',\n      title: 'Menu',\n      description: [\n        <Button key=\"edit\" onClick={() => setTree(menu)}>\n          Customize\n        </Button>,\n        <Button key=\"set\" onClick={() => setMenu(rootNode)}>\n          Apply Change\n        </Button>,\n      ],\n    };\n  }\n\n  reset() {\n    return {\n      key: 'reset',\n      description: (\n        <Button\n          type=\"danger\"\n          sytle={{ width: '100%' }}\n          key=\"edit\"\n          onClick={() => {\n            confirm({\n              title: 'Reset Form Buiilder?',\n              content: 'Removing persistent data from local storage.\\n All settings and unsaved form will be lost.',\n              okText: 'Continue',\n              okType: 'danger',\n              closable: true,\n              maskClosable: true,\n              onOk() {\n                window.localStorage.removeItem('persist:react-jsonschema-formbuilder');\n                window.location.reload();\n              },\n            });\n          }}\n        >\n          Reset Form Builder\n        </Button>\n      ),\n    };\n  }\n\n  listItems() {\n    return [this.siderWidth(), this.formWidth(), this.inlineMode(), this.liveValidate(), this.menu(), this.reset()];\n  }\n\n  renderItem(a) {\n    const {\n      Item,\n      Item: { Meta },\n    } = List;\n    return (\n      <Item key={a.key} actions={a.actions}>\n        <Meta title={a.title} description={a.description} />\n      </Item>\n    );\n  }\n\n  render() {\n    return <List itemLayout=\"horizontal\" dataSource={this.listItems()} renderItem={this.renderItem} />;\n  }\n}\n\nexport default connect(\n  ({\n    settings,\n    tree: {\n      present: [rootNode],\n    },\n    menu,\n  }) => ({ settings, rootNode, menu }),\n  (dispatch) => ({\n    updateSettings: (payload) =>\n      dispatch({\n        type: 'SETTINGS_UPDATE',\n        payload,\n      }),\n    setTree: ({ schema, uiSchema }) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          name: 'menu',\n          schema,\n          uiSchema,\n        },\n      }),\n    setMenu: ({ schema, uiSchema }) =>\n      dispatch({\n        type: 'MENU_SET',\n        payload: {\n          schema,\n          uiSchema,\n        },\n      }),\n  })\n)(Settings);\n","import React, { Component } from 'react';\nimport { Provider, connect } from 'react-redux';\nimport { store, persistor } from './store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './css';\nimport { Layout, Tabs, Card } from 'antd';\nimport Tree from './Tree';\nimport { FormView, SchemaView, UiSchemaView, FormDataView } from './views';\nimport NodeEditor from './Editor';\nimport Toolbar from './Toolbar';\nimport Settings from './Settings';\nconst { Header, Sider, Content } = Layout;\nconst { TabPane } = Tabs;\n\nclass App extends Component {\n  state = {\n    collapsed: false,\n  };\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n  render() {\n    const { settings } = this.props;\n    return (\n      <Layout>\n        <Sider\n          trigger={null}\n          collapsible\n          collapsed={this.state.collapsed}\n          width={settings.leftSiderWidth}\n          style={{\n            background: '#fff',\n            padding: 0,\n            overflow: 'auto',\n            boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 3px 0 rgba(0, 0, 0, 0.2)',\n            height: '100vh',\n            position: 'fixed',\n            left: 0,\n          }}\n        >\n          <Tabs defaultActiveKey=\"0\" size=\"small\" type=\"card\">\n            <TabPane tab=\"Editor\" style={{ padding: '8px' }} key=\"0\">\n              <Tree />\n            </TabPane>\n            <TabPane tab=\"Settings\" style={{ padding: '8px' }} key=\"1\">\n              <Settings />\n            </TabPane>\n          </Tabs>\n        </Sider>\n        <Layout style={{ marginLeft: settings.leftSiderWidth }}>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <Toolbar />\n          </Header>\n          <Content style={{ minHeight: 280, padding: '12px 8px' }}>\n            <Card\n              bordered={false}\n              style={{ width: settings.formWidth, margin: '12px 8px', display: 'inline-block', verticalAlign: 'top' }}\n            >\n              <FormView />\n            </Card>\n            {(settings.subViews || []).map((a) => {\n              const style = { margin: '12px 8px', width: 400, display: 'inline-block', verticalAlign: 'top' };\n              switch (a) {\n                case 'schema':\n                  return (\n                    <Card key=\"schema\" title=\"Schema\" style={style}>\n                      <SchemaView />\n                    </Card>\n                  );\n                case 'uiSchema':\n                  return (\n                    <Card key=\"uiSchema\" title=\"Ui Schema\" style={style}>\n                      <UiSchemaView />\n                    </Card>\n                  );\n                case 'formData':\n                  return (\n                    <Card key=\"formData\" title=\"Form Data\" style={style}>\n                      <FormDataView />\n                    </Card>\n                  );\n                default:\n                  return <div key=\"null\" />;\n              }\n            })}\n          </Content>\n        </Layout>\n        <Sider\n          width={this.props.activeNodeKey ? settings.rightSiderWidth : 0}\n          style={{\n            overflow: 'auto',\n            background: '#fff',\n            boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 3px 0 rgba(0, 0, 0, 0.2)',\n            position: 'fixed',\n            height: '100vh',\n            right: 0,\n          }}\n        >\n          <NodeEditor />\n        </Sider>\n      </Layout>\n    );\n  }\n}\n\nconst AppContainer = connect(({ activeNodeKey, settings }) => ({\n  activeNodeKey,\n  settings,\n}))(App);\nexport default () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <AppContainer />\n    </PersistGate>\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}